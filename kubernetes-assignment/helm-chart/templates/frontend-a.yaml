{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend-a
  labels:
    app: {{ .Release.Name }}
    component: frontend-a
spec:
  replicas: {{ .Values.frontend.replicaA }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: frontend-a
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: frontend-a
    spec:
      containers:
      - name: frontend-a
        image: "{{ .Values.frontend.image.repository }}-a:{{ .Values.frontend.image.tag }}"
        imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_USER_ID
          value: "A"
        - name: REACT_APP_BACKEND_HOST
          value: "backend"
        - name: REACT_APP_BACKEND_PORT
          value: "{{ .Values.backend.service.port }}"
        - name: NODE_OPTIONS
          value: "--max-old-space-size={{ .Values.frontend.nodeMemoryLimit }}"
        resources:
{{ toYaml .Values.frontend.resources | indent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-a-service
  labels:
    app: {{ .Release.Name }}
    component: frontend-a
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
  - port: 3000
    targetPort: 3000
    {{- if eq .Values.frontend.service.type "NodePort" }}
    nodePort: {{ .Values.frontend.service.portA }}
    {{- end }}
  selector:
    app: {{ .Release.Name }}
    component: frontend-a
{{- end }}